<span class="st0">'use strict'</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//demonstrating using functions instead of loops</span>
&nbsp;
<span class="co1">//instead of iterating through an array, we can use forEach, map and filter functions</span>
<span class="kw1">var</span> array <span class="sy0">=</span> <span class="br0">&#91;</span><span class="st0">'one'</span><span class="sy0">,</span> <span class="st0">'two'</span><span class="sy0">,</span> <span class="st0">'three'</span><span class="br0">&#93;</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">for</span><span class="br0">&#40;</span><span class="kw1">var</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> array.<span class="me1">length</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span>array<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">===</span> <span class="st0">'two'</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		array<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">=</span> array<span class="br0">&#91;</span>i<span class="br0">&#93;</span>.<span class="me1">toUpperCase</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span>
console.<span class="me1">log</span><span class="br0">&#40;</span>array<span class="sy0">,</span> <span class="st0">'&lt;- LOOPING'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//forEach method (runs a function when it encounters each value)</span>
<span class="kw1">var</span> array <span class="sy0">=</span> <span class="br0">&#91;</span><span class="st0">'one'</span><span class="sy0">,</span> <span class="st0">'two'</span><span class="sy0">,</span> <span class="st0">'three'</span><span class="br0">&#93;</span><span class="sy0">;</span>
array.<span class="me1">forEach</span><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span>value<span class="sy0">,</span> index<span class="sy0">,</span> originalArray<span class="br0">&#41;</span><span class="br0">&#123;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span>value <span class="sy0">===</span> <span class="st0">'two'</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		array<span class="br0">&#91;</span>index<span class="br0">&#93;</span> <span class="sy0">=</span> value.<span class="me1">toUpperCase</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
console.<span class="me1">log</span><span class="br0">&#40;</span>array<span class="sy0">,</span> <span class="st0">'&lt;- FOREACH METHOD'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//map method (returns a new array and mutates the value)</span>
<span class="kw1">var</span> array <span class="sy0">=</span> <span class="br0">&#91;</span><span class="st0">'one'</span><span class="sy0">,</span> <span class="st0">'two'</span><span class="sy0">,</span> <span class="st0">'three'</span><span class="br0">&#93;</span><span class="sy0">;</span>
array <span class="sy0">=</span> array.<span class="me1">map</span><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span>value<span class="sy0">,</span> index<span class="sy0">,</span> originalArray<span class="br0">&#41;</span><span class="br0">&#123;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span>value <span class="sy0">===</span> <span class="st0">'two'</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		value <span class="sy0">=</span> <span class="st0">'TWO'</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
	<span class="kw1">return</span> value<span class="sy0">;</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span>.<span class="me1">join</span><span class="br0">&#40;</span><span class="st0">','</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//cool use of joins by mapping out an array and then joining into a string!</span>
console.<span class="me1">log</span><span class="br0">&#40;</span>array<span class="sy0">,</span> <span class="st0">'&lt;- MAP METHOD'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//filter method</span>
<span class="kw1">var</span> array <span class="sy0">=</span> <span class="br0">&#91;</span><span class="st0">'one'</span><span class="sy0">,</span> <span class="st0">'two'</span><span class="sy0">,</span> <span class="st0">'three'</span><span class="br0">&#93;</span><span class="sy0">;</span>
array <span class="sy0">=</span> array.<span class="me1">filter</span><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span>value<span class="sy0">,</span> index<span class="sy0">,</span> originalArray<span class="br0">&#41;</span><span class="br0">&#123;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span>value <span class="sy0">===</span> <span class="st0">'two'</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		<span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
	<span class="kw1">return</span> <span class="kw2">true</span><span class="sy0">;</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
console.<span class="me1">log</span><span class="br0">&#40;</span>array<span class="sy0">,</span> <span class="st0">'&lt;- FILTER METHOD'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//reduce method (iterates through two values at a time</span>
<span class="kw1">var</span> array <span class="sy0">=</span> <span class="br0">&#91;</span><span class="st0">'one'</span><span class="sy0">,</span> <span class="st0">'two'</span><span class="sy0">,</span> <span class="st0">'three'</span><span class="br0">&#93;</span><span class="sy0">;</span>
array <span class="sy0">=</span> array.<span class="me1">reduce</span><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span>prev<span class="sy0">,</span> next<span class="sy0">,</span> index<span class="sy0">,</span> originalArray<span class="br0">&#41;</span><span class="br0">&#123;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span>next <span class="sy0">===</span> <span class="st0">'two'</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		next <span class="sy0">=</span> next.<span class="me1">toUpperCase</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
	<span class="kw1">return</span> prev <span class="sy0">+</span> next<span class="sy0">;</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
console.<span class="me1">log</span><span class="br0">&#40;</span>array<span class="sy0">,</span> <span class="st0">'&lt;- REDUCE METHOD'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//you can combine all of these methods together via method chaining</span>
<span class="kw1">var</span> array <span class="sy0">=</span> <span class="br0">&#91;</span><span class="st0">'one'</span><span class="sy0">,</span> <span class="st0">'two'</span><span class="sy0">,</span> <span class="st0">'three'</span><span class="br0">&#93;</span><span class="sy0">;</span>
array <span class="sy0">=</span> array.<span class="me1">map</span><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span>value<span class="br0">&#41;</span><span class="br0">&#123;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span>value <span class="sy0">===</span> <span class="st0">'two'</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		<span class="kw1">return</span> <span class="st0">'TWO'</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
	<span class="kw1">return</span> value<span class="sy0">;</span> <span class="co1">//without this it'll be almost like filtering</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span>.<span class="me1">filter</span><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span>value<span class="br0">&#41;</span><span class="br0">&#123;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span>value <span class="sy0">===</span> <span class="st0">'three'</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		<span class="kw1">return</span> <span class="kw2">false</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
	<span class="kw1">return</span> <span class="kw2">true</span><span class="sy0">;</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span>.<span class="me1">reduce</span><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span>prev<span class="sy0">,</span> next<span class="br0">&#41;</span><span class="br0">&#123;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span>next <span class="sy0">===</span> <span class="st0">'one'</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		next <span class="sy0">=</span> <span class="st0">'oNe'</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
	<span class="kw1">return</span> prev <span class="sy0">+</span> next<span class="sy0">;</span>
<span class="br0">&#125;</span><span class="sy0">,</span> <span class="st0">''</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//second parameter to reduce is initial value, if you want to start &quot;next&quot; at the first elemnt of array</span>
console.<span class="me1">log</span><span class="br0">&#40;</span>array<span class="sy0">,</span> <span class="st0">'&lt;- COMBINED METHOD'</span><span class="br0">&#41;</span><span class="sy0">;</span>