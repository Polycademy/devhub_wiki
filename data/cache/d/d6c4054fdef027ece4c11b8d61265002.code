<span class="st0">'use strict'</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//Demonstration of function scoping vs the lack of block scoping</span>
&nbsp;
<span class="co1">//In this example, we want to be able to log 1, 2, 3, but we'll see that we cannot!</span>
<span class="kw1">var</span> arr <span class="sy0">=</span> <span class="br0">&#91;</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">2</span><span class="sy0">,</span><span class="nu0">3</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="kw1">var</span> out <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//the for loop is a block expression, it has no scope</span>
<span class="kw1">for</span><span class="br0">&#40;</span><span class="kw1">var</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span>arr.<span class="me1">length</span><span class="sy0">;</span>i<span class="sy0">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
	<span class="kw1">var</span> item <span class="sy0">=</span> arr<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="sy0">;</span> <span class="co1">//therefore when the loop finishes, it will be as if item has been defined outside</span>
	<span class="co1">//here we push a callback function into the out array</span>
	out.<span class="me1">push</span><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		console.<span class="me1">log</span><span class="br0">&#40;</span>item<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//this will access item which is defined outside of its scope</span>
	<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&nbsp;
console.<span class="me1">log</span><span class="br0">&#40;</span>item<span class="sy0">,</span> <span class="st0">'&lt;- This is the item after the loop finishes!'</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//the fact that I can access item, means that for did not scope that item</span>
console.<span class="me1">log</span><span class="br0">&#40;</span>out<span class="sy0">,</span> <span class="st0">'&lt;- This is the array of functions!'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//the forEach is the ES5 command which executes a callback on each item of the array, the func is automatically injected from the javascript</span>
out.<span class="me1">forEach</span><span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span>func<span class="br0">&#41;</span><span class="br0">&#123;</span>
	func<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//the executes the callback on each array</span>
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>