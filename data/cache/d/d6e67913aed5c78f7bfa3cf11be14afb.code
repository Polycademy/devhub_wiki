<span class="co1">//php tries to do something, and if an exception is &quot;thrown&quot; then it will catch it</span>
try <span class="br0">&#123;</span>
&nbsp;
    <span class="co1">// try body</span>
    <span class="kw1">if</span><span class="br0">&#40;</span><span class="re0">$something_bad_happened</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
        <span class="kw1">throw</span> <span class="kw2">new</span> Exception<span class="sy0">;</span> <span class="co1">//exceptions are objects!</span>
    <span class="br0">&#125;</span>
&nbsp;
<span class="co1">//note that if you're using namespaces, Exception is a class requiring a namespace root such as &quot;\Exception&quot;</span>
<span class="br0">&#125;</span> catch <span class="br0">&#40;</span>Exception <span class="re0">$e</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
    <span class="co1">//the catch parameter is being typehinted to the Exception object, we can also use custom typehints later</span>
    <span class="co1">//$e is the exception object, we can access its methods</span>
    <span class="kw1">echo</span> <span class="re0">$e</span><span class="sy0">-&gt;</span><span class="me1">getMessage</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">echo</span> <span class="re0">$e</span><span class="sy0">-&gt;</span><span class="me1">getCode</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="co1">// there are more methods you can use, refer to the exception documentation</span>
&nbsp;
<span class="br0">&#125;</span>