<span class="co1">//if our html was like this</span>
<span class="coMULTI">/*
&lt;div widget attribute=&quot;some primitive string&quot; interpolated-attribute=&quot;{{interpolatedModel}}&quot;&gt;&lt;/div&gt;
*/</span>
<span class="co1">//assuming object hash:</span>
<span class="coMULTI">/*
scope: {
    attribute: '@',
    interpolatedAttribute: '@'
};
*/</span>
<span class="co1">//then in order to access it in the linking function</span>
<span class="kw1">function</span><span class="br0">&#40;</span>scope<span class="sy0">,</span> element<span class="sy0">,</span> attributes<span class="br0">&#41;</span><span class="br0">&#123;</span>
    console.<span class="me1">log</span><span class="br0">&#40;</span>scope.<span class="me1">attribute</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//won't work</span>
    console.<span class="me1">log</span><span class="br0">&#40;</span>attributes.<span class="me1">attribute</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//works</span>
&nbsp;
    attributes.$observe<span class="br0">&#40;</span><span class="st0">'interpolatedAttribute'</span><span class="sy0">,</span> <span class="kw1">function</span><span class="br0">&#40;</span>value<span class="br0">&#41;</span><span class="br0">&#123;</span>
        <span class="co1">//value now contains the interpolated {{interpolatedModel}}</span>
        <span class="co1">//this also runs everytime the interpolation changes</span>
        console.<span class="me1">log</span><span class="br0">&#40;</span><span class="st0">'Observe got activated, new value: '</span> <span class="sy0">+</span> value<span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="co1">//now it is one way binding, so if the interpolatedModel changed in the controller, then the directive would get it, but if it got changed in the directive, the controller will not get it, but the $observe will still activate!</span>
&nbsp;
    attributes.$set<span class="br0">&#40;</span><span class="st0">'interpolatedAttribute'</span><span class="sy0">,</span> <span class="st0">'new value!'</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>