<span class="co1">//'use strict'; //this is commented out, as use strict would actually make this demonstration impossible, it tells you when you have binding loss, uncomment it to see it working!</span>
&nbsp;
<span class="co1">//demonstration of binding sensitive code, be careful of these!</span>
&nbsp;
<span class="kw1">var</span> name <span class="sy0">=</span> <span class="st0">'I am in the window! You should not see me!'</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">var</span> object <span class="sy0">=</span> <span class="br0">&#123;</span>
	name<span class="sy0">:</span> <span class="st0">'Hi I am an object!'</span><span class="sy0">,</span>
	greet<span class="sy0">:</span> <span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		console.<span class="me1">log</span><span class="br0">&#40;</span><span class="st0">'Message: '</span> <span class="sy0">+</span> <span class="kw1">this</span>.<span class="me1">name</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span><span class="sy0">,</span>
	timeoutMethod<span class="sy0">:</span> <span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		setTimeout<span class="br0">&#40;</span><span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
			console.<span class="me1">log</span><span class="br0">&#40;</span><span class="st0">'Timeout Method: '</span> <span class="sy0">+</span> <span class="kw1">this</span>.<span class="me1">name</span><span class="br0">&#41;</span><span class="sy0">;</span>
		<span class="br0">&#125;</span><span class="sy0">,</span> <span class="nu0">2000</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span><span class="sy0">,</span>
	bindingTimeoutMethod<span class="sy0">:</span> <span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		setTimeout<span class="br0">&#40;</span><span class="kw1">this</span>.<span class="me1">funcToBeTimedOut</span><span class="sy0">,</span> <span class="nu0">3000</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span><span class="sy0">,</span>
	funcToBeTimedOut<span class="sy0">:</span> <span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		console.<span class="me1">log</span><span class="br0">&#40;</span><span class="st0">'Second Timeout Method '</span> <span class="sy0">+</span> <span class="kw1">this</span>.<span class="me1">name</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
<span class="co1">//&quot;METHOD CALL&quot;</span>
object.<span class="me1">greet</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//works</span>
&nbsp;
<span class="co1">//&quot;BASELESS FUNCTION CALL&quot;</span>
<span class="co1">//executing the function outside of the object context</span>
<span class="co1">//the &quot;this&quot; loses its binding, it actually binds to window global!</span>
<span class="kw1">var</span> funcToBeExecutedOutside <span class="sy0">=</span> object.<span class="me1">greet</span><span class="sy0">;</span>
funcToBeExecutedOutside<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//does not work</span>
&nbsp;
<span class="co1">//&quot;METHOD CALLBACK&quot;</span>
<span class="co1">//still loses the binding</span>
<span class="kw1">var</span> anotherObject <span class="sy0">=</span> <span class="br0">&#123;</span>
	highFunc<span class="sy0">:</span> <span class="kw1">function</span><span class="br0">&#40;</span>callback<span class="br0">&#41;</span><span class="br0">&#123;</span>
		callback<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//executes object.greet();</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
anotherObject.<span class="me1">highFunc</span><span class="br0">&#40;</span>object.<span class="me1">greet</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//&quot;USING TIMEOUT&quot;</span>
<span class="co1">//also loses its binding</span>
setTimeout<span class="br0">&#40;</span>object.<span class="me1">greet</span><span class="sy0">,</span> <span class="nu0">1000</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co1">//even when it is inside the a method! (think about where this is been invocated, it's not inside the object context, its part of setTimeout!)</span>
object.<span class="me1">timeoutMethod</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="co1">//similar concept, calling a method that calls its own method, still fails</span>
object.<span class="me1">bindingTimeoutMethod</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//this one will still work, because it is still a &quot;METHOD CALL&quot;</span>
<span class="kw1">var</span> thirdObject <span class="sy0">=</span> <span class="br0">&#123;</span>
	thirdPartyMethod<span class="sy0">:</span> <span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
		object.<span class="me1">greet</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
thirdObject.<span class="me1">thirdPartyMethod</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>