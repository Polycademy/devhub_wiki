<span class="st0">'use strict'</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//demonstrating shadowing or method overriding</span>
&nbsp;
<span class="kw1">var</span> Person <span class="sy0">=</span> <span class="kw1">function</span><span class="br0">&#40;</span>name<span class="sy0">,</span> age<span class="sy0">,</span> job<span class="br0">&#41;</span><span class="br0">&#123;</span>
    <span class="kw1">this</span>.<span class="me1">name</span> <span class="sy0">=</span> name<span class="sy0">;</span>
    <span class="kw1">this</span>.<span class="me1">age</span> <span class="sy0">=</span> age<span class="sy0">;</span>
    <span class="kw1">this</span>.<span class="me1">job</span> <span class="sy0">=</span> job<span class="sy0">;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//fallback method on the prototype</span>
Person.<span class="kw1">prototype</span>.<span class="me1">sayName</span> <span class="sy0">=</span> <span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
    console.<span class="me1">log</span><span class="br0">&#40;</span><span class="kw1">this</span>.<span class="me1">age</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//says the age</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
<span class="kw1">var</span> person1 <span class="sy0">=</span> <span class="kw1">new</span> Person<span class="br0">&#40;</span><span class="st0">'Dave'</span><span class="sy0">,</span> <span class="nu0">21</span><span class="sy0">,</span> <span class="st0">'Super Developer'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="co1">//overrides the prototype method</span>
person1.<span class="me1">sayName</span> <span class="sy0">=</span> <span class="kw1">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
    console.<span class="me1">log</span><span class="br0">&#40;</span><span class="kw1">this</span>.<span class="me1">name</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="co1">//executes the object instance's method</span>
person1.<span class="me1">sayName</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//says the name!</span>
&nbsp;
<span class="co1">//now how do we call the prototype method if it's been overwritten?</span>
<span class="co1">//By calling it via the __proto__ in the object instance or part of the constructor function</span>
<span class="kw1">var</span> o <span class="sy0">=</span> <span class="br0">&#123;</span> age<span class="sy0">:</span> <span class="nu0">15</span> <span class="br0">&#125;</span><span class="sy0">;</span>
person1.<span class="kw3">__proto__</span>.<span class="me1">sayName</span>.<span class="me1">call</span><span class="br0">&#40;</span>o<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//these are binding functions (will display 15)</span>
<span class="co1">//notice how we didn't need to use () to execute the function, the call and apply takes care of that</span>
Person.<span class="kw1">prototype</span>.<span class="me1">sayName</span>.<span class="me1">apply</span><span class="br0">&#40;</span>person1<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//another binding function (will display 21)</span>
&nbsp;
<span class="co1">//this will show nothing due to lack of binding, more on this in the understanding &quot;this&quot; section</span>
Person.<span class="kw1">prototype</span>.<span class="me1">sayName</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>