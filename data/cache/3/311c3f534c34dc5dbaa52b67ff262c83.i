a:315:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"Web Programming";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:702:"Web programming is a complex field involving computer science and software engineering. It is often claimed that you need a strong mathematical background to do software engineering. This is claim is not well understood. Computer science is much more closely related to mathematics than software engineering, computer science is the theory of computation involving mathematics. While programming came out of computer science and is used in computer science, most high level web applications and hence software engineering don't involve heavy mathematical processing. Basically you don't need to be a mathematician to do programming, but you do if you want the computer to do heavy calculations for you.";}i:2;i:32;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:734;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:734;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:396:"You can learn the syntax of programming languages at home, knowing syntax is not difficult, it's far more difficult to understand architecture, patterns and workflow. These knowledge areas come from either a deep understanding of theory, and/or experience in shipping software. This article goes through each of those areas and further separates them into server side and client side programming.";}i:2;i:736;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1132;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1132;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:732:"Architecture is about understanding the structure of web applications. Firstly this means understanding how different layers of software in your solution stack communicate to each other. Secondly this means understanding how a single piece of software and its dependencies is modularised and brought together. Thirdly it means understanding the philosophies of programming either in functional style or object oriented style, these pertains to how a person mentally visualises software and connects the dots. Finally its about understanding the specialisations of different tools and software stacks, so you choose the right tool for the job. Along the way you'll understand how a computer functions in a holistic and granular way. ";}i:2;i:1134;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1866;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1866;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:413:"Patterns is about understanding programming language tactics that have been battle tested and used by professionals to solve particular problems. These are called design patterns. They arose out of the fact that many developers met similar problems when developing their applications, and came together a set of best practices. Understanding this is important for rapidly development and maintainable development.";}i:2;i:1868;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2281;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2281;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:221:"Workflow is about understanding where to start and where to finish. You'll learn how to begin with a feature set, before turning it into a working prototype, and then applying quality assurance via testing and deployment.";}i:2;i:2283;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2504;}i:18;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2504;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:257:"To speed up the learning process, we're going to use pre-made frameworks, libraries and APIs instead of starting from scratch. You're here to build your web application of course, and nobody reinvents the wheel to drive a car! This course will be using the ";}i:2;i:2506;}i:20;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:2763;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:132:" server scripting language with the Codeigniter development framework and Javascript client side scripting language with either the ";}i:2;i:2766;}i:22;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"DOM";}i:2;i:2898;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:" manipulation library jQuery or an MVC framework such as AngularJS or JavascriptMVC.";}i:2;i:2901;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2985;}i:25;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2985;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"Because each web application has its own custom domain problem to solve, this course will not teach how to use any particular ";}i:2;i:2987;}i:27;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:3113;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:". Once you understand architecture and how to use one ";}i:2;i:3116;}i:29;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:3170;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:", then just by following the vendor's instructions, you can use all APIs.";}i:2;i:3173;}i:31;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3247;}i:32;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3247;}i:33;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"Syntax";i:1;i:2;i:2;i:3247;}i:2;i:3247;}i:34;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:3247;}i:35;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3247;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:"These are the best reference resources for syntax.";}i:2;i:3267;}i:37;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3317;}i:38;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3317;}i:39;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:3319;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:":";}i:2;i:3322;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3324;}i:42;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:3324;}i:43;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3324;}i:44;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3324;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:3328;}i:46;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:38:"http://www.php.net/manual/en/index.php";i:1;s:7:"PHP.net";}i:2;i:3329;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:135:" - You do not need to read the whole manual. Instead use it as a reference for a particular function or object. The best way to search ";}i:2;i:3379;}i:48;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:3514;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:".net is to use google. Please note the ";}i:2;i:3517;}i:50;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:3556;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" version that you're running. Not all hosts run the most latest ";}i:2;i:3559;}i:52;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:3623;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:136:" version, and the versions between your development and host server may be different. You'll need to find the lowest common denominator.";}i:2;i:3626;}i:54;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3762;}i:55;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3762;}i:56;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3762;}i:57;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3762;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:3766;}i:59;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:35:"http://prototype.php.net/manual/en/";i:1;s:16:"Protoype PHP.net";}i:2;i:3767;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:" - This is a better starting point to get acquainted with the operators and functions of ";}i:2;i:3823;}i:61;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:3912;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:3915;}i:63;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3916;}i:64;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3916;}i:65;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3916;}i:66;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3916;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:3920;}i:68;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:26:"http://phpbounce.aws.af.cm";i:1;s:10:"PHP Bounce";}i:2;i:3921;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:136:" - You should also try this application built in Polycademy. It is also a good tool to test out syntax, without loading up a web server.";}i:2;i:3962;}i:70;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4098;}i:71;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4098;}i:72;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4098;}i:73;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4098;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4102;}i:75;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:30:"http://www.phptherightway.com/";i:1;s:17:"PHP The Right Way";}i:2;i:4103;}i:76;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4155;}i:77;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4155;}i:78;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4155;}i:79;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4155;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Javascript:";}i:2;i:4157;}i:81;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4169;}i:82;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:4169;}i:83;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4169;}i:84;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4169;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4173;}i:86;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:48:"https://developer.mozilla.org/en/docs/JavaScript";i:1;s:14:"MDN Javascript";}i:2;i:4174;}i:87;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:129:" - The best reference and guide to Javascript, try to read as much of as possible and run them in your browser using the console.";}i:2;i:4241;}i:88;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4370;}i:89;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4370;}i:90;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4370;}i:91;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4370;}i:92;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4374;}i:93;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:43:"http://www.codecademy.com/tracks/javascript";i:1;s:27:"Codecademy Javascript Track";}i:2;i:4375;}i:94;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:93:" - Start playing in Codecademy, it will be an easy entry point into the syntax of javascript.";}i:2;i:4450;}i:95;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4543;}i:96;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4543;}i:97;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4543;}i:98;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4544;}i:99;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:10:"Frameworks";i:1;i:2;i:2;i:4544;}i:2;i:4544;}i:100;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4544;}i:101;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:8:"imagebox";i:1;a:2:{i:0;i:1;i:1;a:11:{s:4:"type";s:13:"internalmedia";s:3:"src";s:64:":web_application_development:jquery_application_architecture.jpg";s:5:"title";s:0:"";s:5:"align";s:5:"right";s:5:"width";s:3:"200";s:6:"height";N;s:5:"cache";s:5:"cache";s:7:"linking";s:7:"details";s:1:"w";s:3:"200";s:6:"detail";s:142:"/lib/exe/detail.php?id=web_application_development%3Aweb_programming&amp;media=web_application_development:jquery_application_architecture.jpg";s:5:"exist";b:1;}}i:2;i:1;i:3;s:73:"[{{ :web_application_development:jquery_application_architecture.jpg?200|";}i:2;i:4568;}i:102;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:8:"imagebox";i:1;a:2:{i:0;i:3;i:1;s:37:"jQuery Application Architecture Guide";}i:2;i:3;i:3;s:37:"jQuery Application Architecture Guide";}i:2;i:4641;}i:103;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:8:"imagebox";i:1;a:2:{i:0;i:4;i:1;s:3:"}}]";}i:2;i:4;i:3;s:3:"}}]";}i:2;i:4678;}i:104;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4678;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:942:"Frameworks abstract away the granular details of programming. This means they often provide pre-built functions and architecture that you can use right away. This has an empowering effect on rapid development, but it also has a limiting effect by limiting what you can do with it. The frameworks that we're using are going to be quite flexible and powerful. Learning how to use frameworks is similar to learning syntax. They often have a bunch of functions you can call, which you can find out what they do by looking at their documentation, but more importantly they have a set architecture which you have to follow. Following their architecture is more difficult since each framework has their quirks and limitations. Use these reference documentations when you start development. Sometimes you will have to search on both the programming language documentation and the framework documentation to get the function need to solve the problem.";}i:2;i:4683;}i:106;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5625;}i:107;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5625;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Codeigniter";}i:2;i:5627;}i:109;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5639;}i:110;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:5639;}i:111;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5639;}i:112;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5639;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:5643;}i:114;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:43:"http://ellislab.com/codeigniter/user-guide/";i:1;s:22:"Codeigniter User Guide";}i:2;i:5644;}i:115;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5714;}i:116;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5714;}i:117;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5714;}i:118;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5714;}i:119;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:5718;}i:120;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:40:"https://github.com/EllisLab/CodeIgniter/";i:1;s:17:"Github Repository";}i:2;i:5719;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:147:" - You should get Codeigniter by cloning straight from the Github develop branch instead of the normal download. This contains the latest features.";}i:2;i:5781;}i:122;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5928;}i:123;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5928;}i:124;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:5928;}i:125;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5928;}i:126;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"jQuery (for ";}i:2;i:5930;}i:127;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"DOM";}i:2;i:5942;}i:128;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" and ";}i:2;i:5945;}i:129;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"AJAX";}i:2;i:5950;}i:130;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:")";}i:2;i:5954;}i:131;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5956;}i:132;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:5956;}i:133;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5956;}i:134;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5956;}i:135;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:5960;}i:136;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:22:"http://api.jquery.com/";i:1;s:24:"jQuery API Documentation";}i:2;i:5961;}i:137;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6012;}i:138;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6012;}i:139;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6012;}i:140;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6012;}i:141;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:6016;}i:142;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:26:"http://jqfundamentals.com/";i:1;s:19:"jQuery Fundamentals";}i:2;i:6017;}i:143;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6067;}i:144;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6067;}i:145;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6067;}i:146;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6067;}i:147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:6071;}i:148;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:52:"https://tutsplus.com/course/30-days-to-learn-jquery/";i:1;s:23:"30 Days to Learn jQuery";}i:2;i:6072;}i:149;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6152;}i:150;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6152;}i:151;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6152;}i:152;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6152;}i:153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:"Javascript MVC Frameworks for Single Page Applications (SPAs)";}i:2;i:6154;}i:154;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6216;}i:155;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6216;}i:156;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6216;}i:157;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6216;}i:158;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:6220;}i:159;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:21:"http://angularjs.org/";i:1;s:10:"Angular JS";}i:2;i:6221;}i:160;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6257;}i:161;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6257;}i:162;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6257;}i:163;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6257;}i:164;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:"A note regarding javascript. Doing SPAs require you structure your application server as an ";}i:2;i:6259;}i:165;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:6351;}i:166;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:" end point, and you need to apply authentication strategies fit for SPA use such as Oauth server plus client.";}i:2;i:6354;}i:167;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6463;}i:168;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6463;}i:169;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:327:"There are other frameworks that have deep specialisations, these are more libraries than frameworks. They are not for general development, but can be used if your web app demands them. For example three.js for WebGL, HTML5 Canvas Game Engines/Frameworks for javascript canvas games, and D3.js/Raphael.js for data visualisation.";}i:2;i:6465;}i:170;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6793;}i:171;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6793;}i:172;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:35:"Understanding the Application Stack";i:1;i:2;i:2;i:6793;}i:2;i:6793;}i:173;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:6793;}i:174;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:8:"imagebox";i:1;a:2:{i:0;i:1;i:1;a:11:{s:4:"type";s:13:"internalmedia";s:3:"src";s:56:":web_application_development:full_http_stack_diagram.png";s:5:"title";s:0:"";s:5:"align";s:5:"right";s:5:"width";s:3:"200";s:6:"height";N;s:5:"cache";s:5:"cache";s:7:"linking";s:7:"details";s:1:"w";s:3:"200";s:6:"detail";s:134:"/lib/exe/detail.php?id=web_application_development%3Aweb_programming&amp;media=web_application_development:full_http_stack_diagram.png";s:5:"exist";b:1;}}i:2;i:1;i:3;s:65:"[{{ :web_application_development:full_http_stack_diagram.png?200|";}i:2;i:6842;}i:175;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTTP";}i:2;i:6907;}i:176;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:8:"imagebox";i:1;a:2:{i:0;i:3;i:1;s:22:" Stack & Request Cycle";}i:2;i:3;i:3;s:22:" Stack & Request Cycle";}i:2;i:6911;}i:177;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:8:"imagebox";i:1;a:2:{i:0;i:4;i:1;s:3:"}}]";}i:2;i:4;i:3;s:3:"}}]";}i:2;i:6933;}i:178;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6933;}i:179;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"When the client (browser) visits an ";}i:2;i:6938;}i:180;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"URL";}i:2;i:6974;}i:181;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:", it points to a particular server address provided by a host. The browsers send an ";}i:2;i:6977;}i:182;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTTP";}i:2;i:7061;}i:183;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:" request. This request is a text message structured in a particular ";}i:2;i:7065;}i:184;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTTP";}i:2;i:7133;}i:185;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:272:" protocol. This text message has a bunch of values specifying who you are, where the request came from and other information. Think of it as a letter to someone you didn't know, so you also specify the return address. The server is usually composed of three elements. The ";}i:2;i:7137;}i:186;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTTP";}i:2;i:7409;}i:187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:" web server, the application server then the database or web service. The ";}i:2;i:7413;}i:188;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTTP";}i:2;i:7487;}i:189;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:107:" server in our case is Apache. This handles and routs requests to the correct program to process. A single ";}i:2;i:7491;}i:190;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTTP";}i:2;i:7598;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:244:" server may have multiple application servers. The application server is the meat of your web application. Handling the Apache is done by the DevOps professionals. You're a developer, so your primary work will be on the application server. The ";}i:2;i:7602;}i:192;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:7846;}i:193;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:" application server is request based, that is Apache spins up an instance of ";}i:2;i:7849;}i:194;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:7926;}i:195;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:", the ";}i:2;i:7929;}i:196;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:7935;}i:197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:341:" processes and returns a response, then the instance dies. Because of this short lived nature, in order to persist data across multiple requests, the application server stores data into a database or third party webservice. The database is usually long-running, so that instances of doesn't need to be spun up for the application to contact.";}i:2;i:7938;}i:198;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8279;}i:199;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8279;}i:200;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:"Any libraries, frameworks and templating pertaining to ";}i:2;i:8281;}i:201;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"PHP";}i:2;i:8336;}i:202;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:423:" live on the application server. Database software is independent from the application server, because any one single application server could have multiple databases. As you can see these stages are all modularised and independently scalable. When scaling the stack, the challenge is usually in replicating data and processing. Or else you will have conflicts between different databases and application processing states.";}i:2;i:8339;}i:203;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8762;}i:204;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8762;}i:205;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:270:"When the response is returned from the web server, it is usually text or binary data if it is streaming video/audio. This data is interpreted by the browser to represent an user interface state. What is returned to the browser in the case of web applications is usually ";}i:2;i:8764;}i:206;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:9034;}i:207;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:", ";}i:2;i:9038;}i:208;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"CSS";}i:2;i:9040;}i:209;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:379:" and Javascript. So these languages are actually executed in the browser. Think of the server as returning a payload, that doesn't do anything until it's ran by the browser. That's why we have programming on the server side, and programming on the client side. The dynamics of each are unique and they require their own special attention. Any libraries, frameworks pertaining to ";}i:2;i:9043;}i:210;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:9422;}i:211;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"/";}i:2;i:9426;}i:212;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"CSS";}i:2;i:9427;}i:213;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:" and javascript are stored on the application server but are ran on the client side.";}i:2;i:9430;}i:214;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9514;}i:215;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9514;}i:216;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"When the ";}i:2;i:9516;}i:217;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"AJAX";}i:2;i:9525;}i:218;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:342:" technique is performed, the same operation is conducted, but it's conducted in the background by javascript so the browser doesn't refresh in order to load more payloads from the server. The javascript on client side can be simple scripts or it could be a heavy client side application involving its own MVC framework. The model consists of ";}i:2;i:9529;}i:219;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"AJAX";}i:2;i:9871;}i:220;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:149:" commands, the controls consist of routing and view binding, and the view consists of client side templating either through precompiled templates or ";}i:2;i:9875;}i:221;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"AJAX";}i:2;i:10024;}i:222;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:" lazy loaded templates. These templates are just ";}i:2;i:10028;}i:223;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:10077;}i:224;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:" markup that are loaded but hidden from view until javascript binds them with model data and appends them to the ";}i:2;i:10081;}i:225;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"DOM";}i:2;i:10194;}i:226;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:". This will further expanded in the Architecture section.";}i:2;i:10197;}i:227;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10255;}i:228;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:10255;}i:229;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"Architecture";i:1;i:2;i:2;i:10255;}i:2;i:10255;}i:230;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:10255;}i:231;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10255;}i:232;a:3:{i:0;s:13:"interwikilink";i:1;a:4:{i:0;s:24:"wp>Software architecture";i:1;s:21:"Software architecture";i:2;s:2:"wp";i:3;s:21:"Software architecture";}i:2;i:10281;}i:233;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:359:" about understanding how to best architect your application so that is agile to develop, but flexible and maintainable when you scale up. This section is separated into server side architecture and client side architecture. These two feed into each other, depending on how to structure your client side, you may need to change your server side and vice-versa.";}i:2;i:10331;}i:234;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10691;}i:235;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:10691;}i:236;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10691;}i:237;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10691;}i:238;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:10695;}i:239;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:30:"PHP - Server Side Architecture";i:1;s:34:"Server Side Architecture using PHP";}i:2;i:10696;}i:240;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10765;}i:241;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10765;}i:242;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10765;}i:243;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10765;}i:244;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:10769;}i:245;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:37:"Javascript - Client Side Architecture";i:1;s:41:"Client Side Architecture using Javascript";}i:2;i:10770;}i:246;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10853;}i:247;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10853;}i:248;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:10853;}i:249;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10853;}i:250;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"Refer to the ";}i:2;i:10855;}i:251;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:100:"http://97things.oreilly.com/wiki/index.php/97_Things_Every_Software_Architect_Should_Know_-_The_Book";i:1;s:46:"97 Things Every Software Architect Should Know";}i:2;i:10868;}i:252;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:11019;}i:253;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11020;}i:254;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:11022;}i:255;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"Patterns";i:1;i:2;i:2;i:11022;}i:2;i:11022;}i:256;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:11022;}i:257;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11022;}i:258;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"In software development, developers often come together to create and establish ";}i:2;i:11044;}i:259;a:3:{i:0;s:13:"interwikilink";i:1;a:4:{i:0;s:26:"wp>Software design pattern";i:1;s:24:"software design patterns";i:2;s:2:"wp";i:3;s:23:"Software design pattern";}i:2;i:11124;}i:260;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:514:". These are reusable solutions to common problems faced by software developers. You can think of them as best practices to software development. This section however expands beyond the standard design patterns but includes general concepts and practices that developers abide by. However remember that patterns are guidelines, there's no hard and fast rules about design patterns. Sometimes if its easier and simpler to accomplish a task without a design pattern, then there's no point in implementing the pattern.";}i:2;i:11179;}i:261;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11693;}i:262;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11693;}i:263;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:333:"Many design patterns appear simultaneously in different languages. So there may be some duplication in their implementations. However these sections will try to elucidate the most pertinent design patterns to each language. Furthermore, these sections not only incorporate patterns in software code, but also standards and practices.";}i:2;i:11695;}i:264;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12029;}i:265;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:12029;}i:266;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12029;}i:267;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12029;}i:268;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:12033;}i:269;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:21:"PHP - Design Patterns";i:1;s:25:"Design Patterns using PHP";}i:2;i:12034;}i:270;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12085;}i:271;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12085;}i:272;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12085;}i:273;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12085;}i:274;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:12089;}i:275;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:28:"Javascript - Design Patterns";i:1;s:32:"Design Patterns using Javascript";}i:2;i:12090;}i:276;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12155;}i:277;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12155;}i:278;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:12155;}i:279;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12155;}i:280;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"You can learn more about design patterns in ";}i:2;i:12157;}i:281;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:63:"http://addyosmani.com/resources/essentialjsdesignpatterns/book/";i:1;s:47:"Addy Osmani's Essential JS Design Patterns Book";}i:2;i:12201;}i:282;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" and ";}i:2;i:12316;}i:283;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:45:"http://www.fluffycat.com/PHP-Design-Patterns/";i:1;s:27:"List of PHP Design Patterns";}i:2;i:12321;}i:284;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12398;}i:285;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:12400;}i:286;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"Workflow";i:1;i:2;i:2;i:12400;}i:2;i:12400;}i:287;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:12400;}i:288;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12400;}i:289;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:360:"As you get deeper into software development, your workflow becomes important. An efficient workflow can shave off weeks of time when developing software.  Your workflow also determines your software development philosophy. This section will talk about the development process, test driven development, behaviour driven development, bug testing and build tools.";}i:2;i:12422;}i:290;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12783;}i:291;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:12783;}i:292;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12783;}i:293;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12783;}i:294;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:12787;}i:295;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:29:"Software Development Workflow";i:1;N;}i:2;i:12788;}i:296;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12821;}i:297;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12821;}i:298;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:12821;}i:299;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:12823;}i:300;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:40:"External Code Libraries and Web Services";i:1;i:2;i:2;i:12823;}i:2;i:12823;}i:301;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:12823;}i:302;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12823;}i:303;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:320:"A common philosophy among developers is to not reinvent the wheel. If someone else has created a library or framework that makes some task easier or more battle tested, then use their solution. This section contains a list of notable code libraries and web services that you can take advantage so you can develop faster.";}i:2;i:12877;}i:304;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13198;}i:305;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:13198;}i:306;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:13198;}i:307;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:13198;}i:308;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:13202;}i:309;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:40:"External Code Libraries and Web Services";i:1;N;}i:2;i:13203;}i:310;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:13247;}i:311;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:13247;}i:312;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:13247;}i:313;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:13247;}i:314;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:13247;}}