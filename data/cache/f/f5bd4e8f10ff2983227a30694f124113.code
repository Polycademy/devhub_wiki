<span class="kw2">&lt;?php</span>
&nbsp;
Pigeon<span class="sy0">::</span><span class="me2">map</span><span class="br0">&#40;</span><span class="kw2">function</span><span class="br0">&#40;</span><span class="re0">$r</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp;
    <span class="co1">//Route all API requests to the correct controller/method</span>
    <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">route</span><span class="br0">&#40;</span><span class="st_h">'api'</span><span class="sy0">,</span> <span class="kw4">false</span><span class="sy0">,</span> <span class="kw2">function</span><span class="br0">&#40;</span><span class="re0">$r</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp;
        <span class="co1">//courses resource, for creating new courses</span>
        <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">resources</span><span class="br0">&#40;</span><span class="st_h">'courses'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
        <span class="co1">//for user accounts</span>
        <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">resources</span><span class="br0">&#40;</span><span class="st_h">'accounts'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
        <span class="co1">//for logging in and out</span>
        <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">resources</span><span class="br0">&#40;</span><span class="st_h">'sessions'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
        <span class="co1">//let's try subresource routing</span>
        <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">resources</span><span class="br0">&#40;</span><span class="st_h">'dummy'</span><span class="br0">&#41;</span><span class="sy0">;</span>  <span class="co1">//this goes to dummy by itself</span>
        <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">resources</span><span class="br0">&#40;</span><span class="st_h">'super_dummy'</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//this goes to super dummy</span>
        <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">route</span><span class="br0">&#40;</span><span class="st_h">'super_dummy/(:num)'</span><span class="sy0">,</span> <span class="kw4">false</span><span class="sy0">,</span> <span class="kw2">function</span><span class="br0">&#40;</span><span class="re0">$r</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
            <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">resources</span><span class="br0">&#40;</span><span class="st_h">'dummy'</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//this allows sub resource routing such as http://example.com/super_dummy/4/dummy/5</span>
            <span class="co1">//the 4 and 5 will be available as $id and $second_id in the parameters of the controller methods</span>
            <span class="co1">//use sub resources, when a resource needs to be accessed in the context of a parent resource</span>
        <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
        <span class="co1">//migration, comment these in production</span>
        <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">get</span><span class="br0">&#40;</span><span class="st_h">'migrate'</span><span class="sy0">,</span> <span class="st_h">'migrate/index'</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">get</span><span class="br0">&#40;</span><span class="st_h">'migrate/revert'</span><span class="sy0">,</span> <span class="st_h">'migrate/revert'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="co1">//Route everything else to AngularJS</span>
    <span class="re0">$r</span><span class="sy0">-&gt;</span><span class="me1">route</span><span class="br0">&#40;</span><span class="st_h">'(.*)'</span><span class="sy0">,</span> <span class="st_h">'home#index'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="re0">$route</span> <span class="sy0">=</span> Pigeon<span class="sy0">::</span><span class="me2">draw</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="re0">$route</span><span class="br0">&#91;</span><span class="st_h">'default_controller'</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="st_h">'home'</span><span class="sy0">;</span>
<span class="re0">$route</span><span class="br0">&#91;</span><span class="st_h">'404_override'</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="st_h">''</span><span class="sy0">;</span>