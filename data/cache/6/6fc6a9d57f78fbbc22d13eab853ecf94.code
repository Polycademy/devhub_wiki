 <span class="kw2">&lt;?php</span>
&nbsp;
<span class="co1">//this code works</span>
<span class="co1">//fix it up to:</span>
<span class="co1">//not include filename checking, that's retarded</span>
<span class="co1">//don't bother with checking if you're doing CI or MY that's retarded... (you could use autoloading in those MY classes too!)</span>
<span class="co1">//include namespace functionality</span>
<span class="co1">//models, controllers shouldn't be autoloaded (because both are extended from CI classes, these won't be found via the autoloader!)</span>
<span class="co1">//however point it to autoload:</span>
<span class="co1">//helpers (with static classes instead of function lists)</span>
<span class="co1">//anything in the libraries folder</span>
<span class="co1">//anything in the third party (why bother using this, use composer! for non composer third party!)</span>
<span class="co1">//put interfaces into the Interfaces folder</span>
<span class="co1">//put abstracts into Abstracts folder</span>
<span class="co1">//allow loading from the core</span>
&nbsp;
<span class="kw2">class</span> MY_Router <span class="kw2">extends</span> CI_Router<span class="br0">&#123;</span>
&nbsp;
    <span class="kw2">public</span> <span class="kw2">function</span> __construct<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp;
        parent<span class="sy0">::</span>__construct<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
        <a href="http://www.php.net/define"><span class="kw3">define</span></a><span class="br0">&#40;</span><span class="st_h">'EXT'</span><span class="sy0">,</span> <span class="st_h">'.php'</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
        <span class="co1">// register the autoloader (with MY_Router binded to the static function of __autoloader)</span>
        <a href="http://www.php.net/spl_autoload_register"><span class="kw3">spl_autoload_register</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st_h">'MY_Router'</span><span class="sy0">,</span> <span class="st_h">'__autoloader'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="br0">&#125;</span>
&nbsp;
    <span class="co4">/**
    * Autoloader for libraries, abstracts, interfaces and RapidDataMapper data objects
    *
    * @param  string
    * @return void
    */</span>
    <span class="kw2">public</span> static <span class="kw2">function</span> __autoloader<span class="br0">&#40;</span><span class="re0">$class</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp;
        <span class="co1">// Don't autoload CI_ or MY_ prefixed classes, leave that to CI</span>
        <span class="co1">// this is obvious...</span>
        <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/substr"><span class="kw3">substr</span></a><span class="br0">&#40;</span><span class="re0">$class</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">3</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="st_h">'CI_'</span> <span class="sy0">||</span> <a href="http://www.php.net/substr"><span class="kw3">substr</span></a><span class="br0">&#40;</span><span class="re0">$class</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">3</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="st_h">'MY_'</span> <span class="sy0">||</span> <span class="re0">$class</span> <span class="sy0">==</span> <span class="st_h">'Model'</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
            <span class="kw1">return</span><span class="sy0">;</span>
        <span class="br0">&#125;</span>
&nbsp;
        <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/substr"><span class="kw3">substr</span></a><span class="br0">&#40;</span><span class="re0">$class</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">3</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="st_h">'Ab_'</span> <span class="sy0">&amp;&amp;</span> <a href="http://www.php.net/file_exists"><span class="kw3">file_exists</span></a><span class="br0">&#40;</span>APPPATH<span class="sy0">.</span><span class="st_h">'libraries/Abstracts/'</span><span class="sy0">.</span><span class="re0">$class</span><span class="sy0">.</span>EXT<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp;
            <span class="co1">// Loader for Abstract classes (always prefixed with &quot;Ab_&quot;)</span>
            <span class="kw1">require</span><span class="br0">&#40;</span>APPPATH<span class="sy0">.</span><span class="st_h">'libraries/Abstracts/'</span><span class="sy0">.</span><span class="re0">$class</span><span class="sy0">.</span>EXT<span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="kw1">return</span><span class="sy0">;</span>
&nbsp;
        <span class="br0">&#125;</span><span class="kw1">elseif</span> <span class="br0">&#40;</span><a href="http://www.php.net/substr"><span class="kw3">substr</span></a><span class="br0">&#40;</span><span class="re0">$class</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">4</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="st_h">'Int_'</span> <span class="sy0">&amp;&amp;</span> <a href="http://www.php.net/file_exists"><span class="kw3">file_exists</span></a><span class="br0">&#40;</span>APPPATH<span class="sy0">.</span><span class="st_h">'libraries/Interfaces/'</span><span class="sy0">.</span><span class="re0">$class</span><span class="sy0">.</span>EXT<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp;
            <span class="co1">// Loader for Interfaces (always prefixed with &quot;Int_&quot;)</span>
            <span class="kw1">require</span><span class="br0">&#40;</span>APPPATH<span class="sy0">.</span><span class="st_h">'libraries/Interfaces/'</span><span class="sy0">.</span><span class="re0">$class</span><span class="sy0">.</span>EXT<span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="kw1">return</span><span class="sy0">;</span>
&nbsp;
        <span class="br0">&#125;</span><span class="kw1">elseif</span> <span class="br0">&#40;</span><a href="http://www.php.net/file_exists"><span class="kw3">file_exists</span></a><span class="br0">&#40;</span>APPPATH<span class="sy0">.</span><span class="st_h">'libraries/'</span><span class="sy0">.</span><span class="re0">$class</span><span class="sy0">.</span>EXT<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp;
            <span class="co1">// Loader for normal libraries</span>
            <span class="kw1">require</span><span class="br0">&#40;</span>APPPATH<span class="sy0">.</span><span class="st_h">'libraries/'</span><span class="sy0">.</span><span class="re0">$class</span><span class="sy0">.</span>EXT<span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="kw1">return</span><span class="sy0">;</span>
&nbsp;
        <span class="br0">&#125;</span><span class="kw1">elseif</span> <span class="br0">&#40;</span><a href="http://www.php.net/file_exists"><span class="kw3">file_exists</span></a><span class="br0">&#40;</span>APPPATH<span class="sy0">.</span><span class="st_h">'libraries/Third_party/'</span><span class="sy0">.</span><span class="re0">$class</span><span class="sy0">.</span>EXT<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
&nbsp;
            <span class="co1">// Loader for non-CI specific libraries (like SimplePie)</span>
            <span class="kw1">require</span><span class="br0">&#40;</span>APPPATH<span class="sy0">.</span><span class="st_h">'libraries/Third_party/'</span><span class="sy0">.</span><span class="re0">$class</span><span class="sy0">.</span>EXT<span class="br0">&#41;</span><span class="sy0">;</span>
            <span class="kw1">return</span><span class="sy0">;</span>
&nbsp;
        <span class="br0">&#125;</span>
&nbsp;
    <span class="br0">&#125;</span>
&nbsp;
<span class="br0">&#125;</span>